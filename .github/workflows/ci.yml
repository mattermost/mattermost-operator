name: ci
on:
  push:
    branches:
      - master
      - "release-.*"
    tags:
      - "v**"
  pull_request:

permissions:
  contents: read

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: ci/checkout-repo
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: ci/setup-go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version-file: go.mod
          cache: true

      - name: ci/check-style
        run: make check-style

      - name: ci/check-modules
        run: make check-modules

  test:
    runs-on: ubuntu-latest-4-cores
    steps:
      - name: ci/checkout-repo
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
          path: src/github.com/mattermost/mattermost-operator

      - name: ci/setup-go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version-file: src/github.com/mattermost/mattermost-operator/go.mod
          cache-dependency-path: src/github.com/mattermost/mattermost-operator/go.sum
          cache: true

      - name: ci/generate-operator-manifests
        run: |
          cd ${GITHUB_WORKSPACE}/src/github.com/mattermost/mattermost-operator

          make clean
          make operator-sdk

          mkdir -p /tmp/apis/mattermost/v1alpha1
          cp -R apis/mattermost/v1alpha1/* /tmp/apis/mattermost/v1alpha1
          mkdir -p /tmp/apis/mattermost/v1beta1
          cp -R apis/mattermost/v1beta1/* /tmp/apis/mattermost/v1beta1
          mkdir -p /tmp/config/crd/bases
          cp -R config/crd/bases/* /tmp/config/crd/bases

          GOPATH=${GITHUB_WORKSPACE} make generate manifests
          diff /tmp/apis/mattermost/v1alpha1 apis/mattermost/v1alpha1
          diff /tmp/apis/mattermost/v1beta1 apis/mattermost/v1beta1
          diff /tmp/config/crd/bases config/crd/bases

      - name: ci/test
        run: |
          cd ${GITHUB_WORKSPACE}/src/github.com/mattermost/mattermost-operator
          make unittest goverall

      - name: ci/test-e2e
        run: |
          cd ${GITHUB_WORKSPACE}/src/github.com/mattermost/mattermost-operator
          ./test/e2e.sh
        env:
          K8S_VERSION: v1.22.9
          KIND_VERSION: v0.22.0
          SDK_VERSION: v1.0.1
          IMAGE_NAME: mattermost/mattermost-operator
          IMAGE_TAG: test

  build:
    if: ${{ github.event_name == 'pull_request' || github.ref_name  == 'master' }}
    permissions:
      security-events: write
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - name: ci/checkout-repo
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: ci/set-short-SHA
        run: echo "SHORT_SHA=${GITHUB_SHA:0:7}" >> $GITHUB_ENV

      - name: ci/build-docker
        run: make build-image

      - name: ci/scan-docker-security
        uses: aquasecurity/trivy-action@6c175e9c4083a92bbca2f9724c8a5e33bc2d97a5 # v0.30.0
        continue-on-error: true
        with:
          image-ref: "mattermost/mattermost-operator:test"
          format: "sarif"
          limit-severities-for-sarif: true # https://github.com/aquasecurity/trivy-action/blob/0.9.1/entrypoint.sh#L172
          output: "trivy-results.sarif"
          exit-code: "0"
          ignore-unfixed: true
          vuln-type: "os,library"
          severity: "CRITICAL,HIGH"

      - name: ci/create-trivy-results-report
        # if: failure()
        uses: github/codeql-action/upload-sarif@ff0a06e83cb2de871e5a09832bc6a81e7276941f # v3.28.18
        with:
          sarif_file: "trivy-results.sarif"

      - name: ci/setup-buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0
        with:
          version: v0.7.1

      - name: ci/docker-login
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: ci/docker-push
        env:
          OPERATOR_IMAGE_TAG: ${{ env.SHORT_SHA }}
        run: make buildx-image


---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  name: clusterinstallations.mattermost.com
spec:
  group: mattermost.com
  names:
    kind: ClusterInstallation
    listKind: ClusterInstallationList
    plural: clusterinstallations
    singular: clusterinstallation
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: State of Mattermost
      jsonPath: .status.state
      name: State
      type: string
    - description: Image of Mattermost
      jsonPath: .status.image
      name: Image
      type: string
    - description: Version of Mattermost
      jsonPath: .status.version
      name: Version
      type: string
    - description: Endpoint
      jsonPath: .status.endpoint
      name: Endpoint
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ClusterInstallation is the Schema for the clusterinstallations
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: 'Specification of the desired behavior of the Mattermost
              cluster. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#spec-and-status'
            properties:
              affinity:
                $ref: '#/definitions/k8s.io~1api~1core~1v1~0Affinity'
                description: If specified, affinity will define the pod's scheduling
                  constraints
              blueGreen:
                description: BlueGreen defines the configuration of BlueGreen deployment
                  for a ClusterInstallation
                properties:
                  blue:
                    description: Blue defines the blue deployment.
                    properties:
                      image:
                        description: Image defines the base Docker image that will
                          be used for the deployment. Required when BlueGreen or Canary
                          is enabled.
                        type: string
                      ingressName:
                        description: IngressName defines the ingress name that will
                          be used by the deployment. This option is not used for Canary
                          builds.
                        type: string
                      name:
                        description: Name defines the name of the deployment
                        type: string
                      resourceLabels:
                        additionalProperties:
                          type: string
                        type: object
                      version:
                        description: Version defines the Docker image version that
                          will be used for the deployment. Required when BlueGreen
                          or Canary is enabled.
                        type: string
                    type: object
                  enable:
                    description: Enable defines if BlueGreen deployment will be applied.
                    type: boolean
                  green:
                    description: Green defines the green deployment.
                    properties:
                      image:
                        description: Image defines the base Docker image that will
                          be used for the deployment. Required when BlueGreen or Canary
                          is enabled.
                        type: string
                      ingressName:
                        description: IngressName defines the ingress name that will
                          be used by the deployment. This option is not used for Canary
                          builds.
                        type: string
                      name:
                        description: Name defines the name of the deployment
                        type: string
                      resourceLabels:
                        additionalProperties:
                          type: string
                        type: object
                      version:
                        description: Version defines the Docker image version that
                          will be used for the deployment. Required when BlueGreen
                          or Canary is enabled.
                        type: string
                    type: object
                  productionDeployment:
                    description: ProductionDeployment defines if the current production
                      is blue or green.
                    type: string
                type: object
              canary:
                description: Canary defines the configuration of Canary deployment
                  for a ClusterInstallation
                properties:
                  deployment:
                    description: Deployment defines the canary deployment.
                    properties:
                      image:
                        description: Image defines the base Docker image that will
                          be used for the deployment. Required when BlueGreen or Canary
                          is enabled.
                        type: string
                      ingressName:
                        description: IngressName defines the ingress name that will
                          be used by the deployment. This option is not used for Canary
                          builds.
                        type: string
                      name:
                        description: Name defines the name of the deployment
                        type: string
                      resourceLabels:
                        additionalProperties:
                          type: string
                        type: object
                      version:
                        description: Version defines the Docker image version that
                          will be used for the deployment. Required when BlueGreen
                          or Canary is enabled.
                        type: string
                    type: object
                  enable:
                    description: Enable defines if a canary build will be deployed.
                    type: boolean
                type: object
              database:
                description: Database defines the database configuration for a ClusterInstallation.
                properties:
                  backupRemoteDeletePolicy:
                    description: Defines the backup retention policy.
                    type: string
                  backupRestoreSecretName:
                    description: Defines the secret to be used when performing a database
                      restore.
                    type: string
                  backupSchedule:
                    description: Defines the interval for backups in cron expression
                      format.
                    type: string
                  backupSecretName:
                    description: Defines the secret to be used for uploading/restoring
                      backup.
                    type: string
                  backupURL:
                    description: Defines the object storage url for uploading backups.
                    type: string
                  initBucketURL:
                    description: Defines the AWS S3 bucket where the Database Backup
                      is stored. The operator will download the file to restore the
                      data.
                    type: string
                  replicas:
                    description: Defines the number of database replicas. For redundancy
                      use at least 2 replicas. Setting this will override the number
                      of replicas set by 'Size'.
                    format: int32
                    type: integer
                  resources:
                    $ref: '#/definitions/k8s.io~1api~1core~1v1~0ResourceRequirements'
                    description: Defines the resource requests and limits for the
                      database pods.
                  secret:
                    description: "Optionally enter the name of an already-existing
                      Secret for connecting to the database. This secret should be
                      configured as follows: \n User-Managed Database   - Key: DB_CONNECTION_STRING
                      | Value: <FULL_DATABASE_CONNECTION_STRING> Operator-Managed
                      Database   - Key: ROOT_PASSWORD | Value: <ROOT_DATABASE_PASSWORD>
                      \  - Key: USER | Value: <USER_NAME>   - Key: PASSWORD | Value:
                      <USER_PASSWORD>   - Key: DATABASE Value: <DATABASE_NAME> \n
                      Notes:   If you define all secret values for both User-Managed
                      and   Operator-Managed database types, the User-Managed connection
                      string will   take precedence and the Operator-Managed values
                      will be ignored. If the   secret is left blank, the default
                      behavior is to use an Operator-Managed   database with strong
                      randomly-generated database credentials."
                    type: string
                  storageSize:
                    description: Defines the storage size for the database. ie 50Gi
                    pattern: ^([+-]?[0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$
                    type: string
                  type:
                    description: Defines the type of database to use for an Operator-Managed
                      database. This value is ignored when using a User-Managed database.
                    type: string
                  version:
                    description: Defines the cluster version for the database to use
                    type: string
                type: object
              elasticSearch:
                description: ElasticSearch defines the ElasticSearch configuration
                  for a ClusterInstallation.
                properties:
                  host:
                    type: string
                  password:
                    type: string
                  username:
                    type: string
                type: object
              image:
                description: Image defines the ClusterInstallation Docker image.
                type: string
              imagePullPolicy:
                $ref: '#/definitions/k8s.io~1api~1core~1v1~0PullPolicy'
                description: Specify deployment pull policy.
              ingressAnnotations:
                additionalProperties:
                  type: string
                type: object
              ingressName:
                description: IngressName defines the name to be used when creating
                  the ingress rules
                type: string
              livenessProbe:
                $ref: '#/definitions/k8s.io~1api~1core~1v1~0Probe'
                description: Defines the probe to check if the application is up and
                  running.
              mattermostEnv:
                description: Optional environment variables to set in the Mattermost
                  application pods.
                items:
                  $ref: '#/definitions/k8s.io~1api~1core~1v1~0EnvVar'
                type: array
              mattermostLicenseSecret:
                description: Secret that contains the mattermost license
                type: string
              migrate:
                description: 'Migrate specifies that the ClusterInstallation CR should
                  be migrated to the Mattermost CR. CAUTION: Some features like BlueGreen
                  or Canary are not supported with a new Custom Resource therefore
                  migration should be performed with extra caution.'
                type: boolean
              minio:
                description: Minio defines the configuration of Minio for a ClusterInstallation.
                properties:
                  externalBucket:
                    description: Set to the bucket name of your external MinIO or
                      S3.
                    type: string
                  externalURL:
                    description: Set to use an external MinIO deployment or S3. Must
                      also set 'Secret' and 'ExternalBucket'.
                    type: string
                  replicas:
                    description: 'Defines the number of Minio replicas. Supply 1 to
                      run Minio in standalone mode with no redundancy. Supply 4 or
                      more to run Minio in distributed mode. Note that it is not possible
                      to upgrade Minio from standalone to distributed mode. Setting
                      this will override the number of replicas set by ''Size''. More
                      info: https://docs.min.io/docs/distributed-minio-quickstart-guide.html'
                    format: int32
                    type: integer
                  resources:
                    $ref: '#/definitions/k8s.io~1api~1core~1v1~0ResourceRequirements'
                    description: Defines the resource requests and limits for the
                      Minio pods.
                  secret:
                    description: 'Optionally enter the name of already existing secret.
                      Secret should have two values: "accesskey" and "secretkey".
                      Required when "ExternalURL" is set.'
                    type: string
                  storageSize:
                    description: Defines the storage size for Minio. ie 50Gi
                    pattern: ^([+-]?[0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$
                    type: string
                type: object
              nodeSelector:
                additionalProperties:
                  type: string
                description: 'NodeSelector is a selector which must be true for the
                  pod to fit on a node. Selector which must match a node''s labels
                  for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/'
                type: object
              readinessProbe:
                $ref: '#/definitions/k8s.io~1api~1core~1v1~0Probe'
                description: Defines the probe to check if the application is ready
                  to accept traffic.
              replicas:
                description: Replicas defines the number of replicas to use for the
                  Mattermost app servers. Setting this will override the number of
                  replicas set by 'Size'.
                format: int32
                type: integer
              resourceLabels:
                additionalProperties:
                  type: string
                type: object
              resources:
                $ref: '#/definitions/k8s.io~1api~1core~1v1~0ResourceRequirements'
                description: Defines the resource requests and limits for the Mattermost
                  app server pods.
              serviceAnnotations:
                additionalProperties:
                  type: string
                type: object
              size:
                description: 'Size defines the size of the ClusterInstallation. This
                  is typically specified in number of users. This will override replica
                  and resource requests/limits appropriately for the provided number
                  of users. This is a write-only field - its value is erased after
                  setting appropriate values of resources. Accepted values are: 100users,
                  1000users, 5000users, 10000users, 250000users. If replicas and resource
                  requests/limits are not specified, and Size is not provided the
                  configuration for 5000users will be applied. Setting ''Replicas'',
                  ''Resources'', ''Minio.Replicas'', ''Minio.Resource'', ''Database.Replicas'',
                  or ''Database.Resources'' will override the values set by Size.
                  Setting new Size will override previous values regardless if set
                  by Size or manually.'
                type: string
              useIngressTLS:
                type: boolean
              useServiceLoadBalancer:
                type: boolean
              version:
                description: Version defines the ClusterInstallation Docker image
                  version.
                type: string
            required:
            - ingressName
            type: object
          status:
            description: 'Most recent observed status of the Mattermost cluster. Read-only.
              Not included when requesting from the apiserver, only from the Mattermost
              Operator API itself. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#spec-and-status'
            properties:
              blueName:
                description: The name of the blue deployment in BlueGreen
                type: string
              endpoint:
                description: The endpoint to access the Mattermost instance
                type: string
              greenName:
                description: The name of the green deployment in BlueGreen
                type: string
              image:
                description: The image running on the pods in the Mattermost instance
                type: string
              migration:
                description: The status of migration to Mattermost CR.
                properties:
                  error:
                    type: string
                  status:
                    type: string
                type: object
              replicas:
                description: Total number of non-terminated pods targeted by this
                  Mattermost deployment
                format: int32
                type: integer
              state:
                description: Represents the running state of the Mattermost instance
                type: string
              updatedReplicas:
                description: Total number of non-terminated pods targeted by this
                  Mattermost deployment that are running with the desired image.
                format: int32
                type: integer
              version:
                description: The version currently running in the Mattermost instance
                type: string
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

apiVersion: v1
kind: ServiceAccount
metadata:
  name: mattermost-operator
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: clusterinstallations.mattermost.com
spec:
  additionalPrinterColumns:
  - JSONPath: .status.state
    description: State of Mattermost
    name: State
    type: string
  - JSONPath: .status.image
    description: Image of Mattermost
    name: Image
    type: string
  - JSONPath: .status.version
    description: Version of Mattermost
    name: Version
    type: string
  - JSONPath: .status.endpoint
    description: Endpoint
    name: Endpoint
    type: string
  group: mattermost.com
  names:
    kind: ClusterInstallation
    listKind: ClusterInstallationList
    plural: clusterinstallations
    singular: clusterinstallation
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          description: 'Standard objectâ€™s metadata. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#metadata
            +k8s:openapi-gen=false'
          type: object
        spec:
          description: 'Specification of the desired behavior of the Mattermost cluster.
            More info: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#spec-and-status'
          properties:
            affinity:
              description: If specified, affinity will define the pod's scheduling
                constraints
              type: object
            blueGreen:
              properties:
                blue:
                  description: Blue defines the blue deployment.
                  properties:
                    image:
                      description: Image defines the base Docker image that will be
                        used for the deployment. Required when BlueGreen or Canary
                        is enabled.
                      type: string
                    ingressName:
                      description: IngressName defines the ingress name that will
                        be used by the deployment. This option is not used for Canary
                        builds.
                      type: string
                    name:
                      description: Name defines the name of the deployment
                      type: string
                    version:
                      description: Version defines the Docker image version that will
                        be used for the deployment. Required when BlueGreen or Canary
                        is enabled.
                      type: string
                  type: object
                enable:
                  description: Enable defines if BlueGreen deployment will be applied.
                  type: boolean
                green:
                  description: Green defines the green deployment.
                  properties:
                    image:
                      description: Image defines the base Docker image that will be
                        used for the deployment. Required when BlueGreen or Canary
                        is enabled.
                      type: string
                    ingressName:
                      description: IngressName defines the ingress name that will
                        be used by the deployment. This option is not used for Canary
                        builds.
                      type: string
                    name:
                      description: Name defines the name of the deployment
                      type: string
                    version:
                      description: Version defines the Docker image version that will
                        be used for the deployment. Required when BlueGreen or Canary
                        is enabled.
                      type: string
                  type: object
                productionDeployment:
                  description: ProductionDeployment defines if the current production
                    is blue or green.
                  type: string
              type: object
            canary:
              properties:
                deployment:
                  description: Deployment defines the canary deployment.
                  properties:
                    image:
                      description: Image defines the base Docker image that will be
                        used for the deployment. Required when BlueGreen or Canary
                        is enabled.
                      type: string
                    ingressName:
                      description: IngressName defines the ingress name that will
                        be used by the deployment. This option is not used for Canary
                        builds.
                      type: string
                    name:
                      description: Name defines the name of the deployment
                      type: string
                    version:
                      description: Version defines the Docker image version that will
                        be used for the deployment. Required when BlueGreen or Canary
                        is enabled.
                      type: string
                  type: object
                enable:
                  description: Enable defines if a canary build will be deployed.
                  type: boolean
              type: object
            database:
              properties:
                backupRemoteDeletePolicy:
                  description: Defines the backup retention policy.
                  type: string
                backupRestoreSecretName:
                  description: Defines the secret to be used for uploading/restoring
                    backup.
                  type: string
                backupSchedule:
                  description: Defines the interval for backups in cron expression
                    format.
                  type: string
                backupURL:
                  description: Defines the object storage url for uploading backups.
                  type: string
                externalSecret:
                  description: If the user want to use an external DB. This can be
                    inside the same k8s cluster or outside like AWS RDS.
                  type: string
                initBucketURL:
                  description: Defines the AWS S3 bucket where the Database Backup
                    is stored. The operator will download the file to restore the
                    data.
                  type: string
                replicas:
                  description: Defines the number of database replicas. For redundancy
                    use at least 2 replicas. Setting this will override the number
                    of replicas set by 'Size'.
                  format: int32
                  type: integer
                resources:
                  description: Defines the resource requests and limits for the database
                    pods.
                  type: object
                storageSize:
                  description: Defines the storage size for the database. ie 50Gi
                  pattern: ^([+-]?[0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$
                  type: string
                type:
                  type: string
              type: object
            elasticSearch:
              properties:
                host:
                  type: string
                password:
                  type: string
                username:
                  type: string
              type: object
            image:
              description: Image defines the ClusterInstallation Docker image.
              type: string
            ingressAnnotations:
              additionalProperties:
                type: string
              type: object
            ingressName:
              description: IngressName defines the name to be used when creating the
                ingress rules
              type: string
            mattermostLicenseSecret:
              description: Secret that contains the mattermost license
              type: string
            minio:
              properties:
                externalBucket:
                  description: Set to the bucket name of your external MinIO or S3.
                  type: string
                externalURL:
                  description: Set to use an external MinIO deployment or S3. Must
                    also set 'Secret' and 'ExternalBucket'.
                  type: string
                replicas:
                  description: 'Defines the number of Minio replicas. Supply 1 to
                    run Minio in standalone mode with no redundancy. Supply 4 or more
                    to run Minio in distributed mode. Note that it is not possible
                    to upgrade Minio from standalone to distributed mode. Setting
                    this will override the number of replicas set by ''Size''. More
                    info: https://docs.min.io/docs/distributed-minio-quickstart-guide.html'
                  format: int32
                  type: integer
                resources:
                  description: Defines the resource requests and limits for the Minio
                    pods.
                  type: object
                secret:
                  description: 'Optionally enter the name of already existing secret.
                    Secret should have two values: "accesskey" and "secretkey". Required
                    when "ExternalURL" is set.'
                  type: string
                storageSize:
                  description: Defines the storage size for Minio. ie 50Gi
                  pattern: ^([+-]?[0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$
                  type: string
              type: object
            nodeSelector:
              additionalProperties:
                type: string
              description: 'NodeSelector is a selector which must be true for the
                pod to fit on a node. Selector which must match a node''s labels for
                the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/'
              type: object
            replicas:
              description: Replicas defines the number of replicas to use for the
                Mattermost app servers. Setting this will override the number of replicas
                set by 'Size'.
              format: int32
              type: integer
            resources:
              description: Defines the resource requests and limits for the Mattermost
                app server pods.
              type: object
            serviceAnnotations:
              additionalProperties:
                type: string
              type: object
            size:
              description: 'Size defines the size of the ClusterInstallation. This
                is typically specified in number of users. This will set replica and
                resource requests/limits appropriately for the provided number of
                users. Accepted values are: 100users, 1000users, 5000users, 10000users,
                250000users. Defaults to 5000users. Setting ''Replicas'', ''Resources'',
                ''Minio.Replicas'', ''Minio.Resource'', ''Database.Replicas'', or
                ''Database.Resources'' will override the values set by Size.'
              type: string
            useServiceLoadBalancer:
              type: boolean
            version:
              description: Version defines the ClusterInstallation Docker image version.
              type: string
          required:
          - ingressName
          type: object
        status:
          description: 'Most recent observed status of the Mattermost cluster. Read-only.
            Not included when requesting from the apiserver, only from the Mattermost
            Operator API itself. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#spec-and-status'
          properties:
            blueName:
              description: The name of the blue deployment in BlueGreen
              type: string
            endpoint:
              description: The endpoint to access the Mattermost instance
              type: string
            greenName:
              description: The name of the green deployment in BlueGreen
              type: string
            image:
              description: The image running on the pods in the Mattermost instance
              type: string
            replicas:
              description: Total number of non-terminated pods targeted by this Mattermost
                deployment
              format: int32
              type: integer
            state:
              description: Represents the running state of the Mattermost instance
              type: string
            updatedReplicas:
              description: Total number of non-terminated pods targeted by this Mattermost
                deployment that are running with the desired image.
              format: int32
              type: integer
            version:
              description: The version currently running in the Mattermost instance
              type: string
          type: object
      required:
      - spec
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: mattermostrestoredbs.mattermost.com
spec:
  additionalPrinterColumns:
  - JSONPath: .status.state
    description: State of Mattermost DB Restore
    name: State
    type: string
  - JSONPath: .status.originalDBReplicas
    description: Original DB Replicas
    name: Original DB Replicas
    type: string
  group: mattermost.com
  names:
    kind: MattermostRestoreDB
    listKind: MattermostRestoreDBList
    plural: mattermostrestoredbs
    singular: mattermostrestoredb
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          properties:
            initBucketURL:
              description: InitBucketURL defines where the DB backup file is located.
              type: string
            mattermostClusterName:
              description: MattermostClusterName defines the ClusterInstallation name.
              type: string
            mattermostDBName:
              description: MattermostDBName defines the database name. Need to set
                if different from `mattermost`.
              type: string
            mattermostDBPassword:
              description: MattermostDBPassword defines the user password to access
                the database. Need to set if the user is different from the one created
                by the operator.
              type: string
            mattermostDBUser:
              description: MattermostDBUser defines the user to access the database.
                Need to set if the user is different from `mmuser`.
              type: string
            restoreSecret:
              description: RestoreSecret defines the secret that holds the credentials
                to MySQL Operator be able to download the DB backup file
              type: string
          type: object
        status:
          properties:
            originalDBReplicas:
              description: The original number of database replicas. will be used
                to restore after applying the db restore process.
              format: int32
              type: integer
            state:
              description: Represents the state of the Mattermost restore Database.
              type: string
          type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: mattermost-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  - services
  - endpoints
  - persistentvolumeclaims
  - events
  - configmaps
  - secrets
  - serviceaccounts
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
- apiGroups:
  - apps
  resources:
  - deployments
  - daemonsets
  - replicasets
  - statefulsets
  verbs:
  - '*'
- apiGroups:
  - extensions
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  verbs:
  - get
  - create
  - list
  - delete
  - watch
  - update
- apiGroups:
  - monitoring.coreos.com
  resources:
  - servicemonitors
  verbs:
  - get
  - create
- apiGroups:
  - apps
  resourceNames:
  - mattermost-operator
  resources:
  - deployments/finalizers
  verbs:
  - update
- apiGroups:
  - mattermost.com
  resources:
  - '*'
  - clusterinstallations
  - mattermostrestoredbs
  verbs:
  - '*'
- apiGroups:
  - mysql.presslabs.org
  resources:
  - mysqlbackups
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - mysql.presslabs.org
  resources:
  - mysqlclusters
  - mysqlclusters/status
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - miniocontroller.min.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - minio.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - get
  - create
  - list
  - delete
  - watch
  - update
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests
  - certificatesigningrequests/approval
  - certificatesigningrequests/status
  verbs:
  - update
  - create
  - get
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: mattermost-operator
subjects:
- kind: ServiceAccount
  name: mattermost-operator
  namespace: mattermost-operator
roleRef:
  kind: ClusterRole
  name: mattermost-operator
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mattermost-operator
spec:
  replicas: 1
  selector:
    matchLabels:
      name: mattermost-operator
  template:
    metadata:
      labels:
        name: mattermost-operator
    spec:
      serviceAccountName: mattermost-operator
      containers:
        - name: mattermost-operator
          image: mattermost/mattermost-operator:latest
          command:
          - mattermost-operator
          imagePullPolicy: IfNotPresent
          env:
            - name: WATCH_NAMESPACE
              value: ""
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: OPERATOR_NAME
              value: "mattermost-operator"

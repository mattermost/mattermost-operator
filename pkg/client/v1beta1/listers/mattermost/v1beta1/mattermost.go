// Copyright (c) 2017-present Mattermost, Inc. All Rights Reserved.
// See License.txt for license information.

// Code generated by lister-gen. DO NOT EDIT.

package v1beta1

import (
	v1beta1 "github.com/mattermost/mattermost-operator/apis/mattermost/v1beta1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// MattermostLister helps list Mattermosts.
type MattermostLister interface {
	// List lists all Mattermosts in the indexer.
	List(selector labels.Selector) (ret []*v1beta1.Mattermost, err error)
	// Mattermosts returns an object that can list and get Mattermosts.
	Mattermosts(namespace string) MattermostNamespaceLister
	MattermostListerExpansion
}

// mattermostLister implements the MattermostLister interface.
type mattermostLister struct {
	indexer cache.Indexer
}

// NewMattermostLister returns a new MattermostLister.
func NewMattermostLister(indexer cache.Indexer) MattermostLister {
	return &mattermostLister{indexer: indexer}
}

// List lists all Mattermosts in the indexer.
func (s *mattermostLister) List(selector labels.Selector) (ret []*v1beta1.Mattermost, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1beta1.Mattermost))
	})
	return ret, err
}

// Mattermosts returns an object that can list and get Mattermosts.
func (s *mattermostLister) Mattermosts(namespace string) MattermostNamespaceLister {
	return mattermostNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// MattermostNamespaceLister helps list and get Mattermosts.
type MattermostNamespaceLister interface {
	// List lists all Mattermosts in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1beta1.Mattermost, err error)
	// Get retrieves the Mattermost from the indexer for a given namespace and name.
	Get(name string) (*v1beta1.Mattermost, error)
	MattermostNamespaceListerExpansion
}

// mattermostNamespaceLister implements the MattermostNamespaceLister
// interface.
type mattermostNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all Mattermosts in the indexer for a given namespace.
func (s mattermostNamespaceLister) List(selector labels.Selector) (ret []*v1beta1.Mattermost, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1beta1.Mattermost))
	})
	return ret, err
}

// Get retrieves the Mattermost from the indexer for a given namespace and name.
func (s mattermostNamespaceLister) Get(name string) (*v1beta1.Mattermost, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1beta1.Resource("mattermost"), name)
	}
	return obj.(*v1beta1.Mattermost), nil
}
